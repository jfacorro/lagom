(ns lagom.app
  (:require [lagom.sup :as sup]))

(declare start-cowboy)

(defn start [type args]
  (start-cowboy)
  (sup/start-link))

(defn stop [state]
  state)

(def routes
  {:_ #erl(["/"          :lagom.index nil]
           ["/story"     :lagom.story nil]
           ["/meaning"   :lagom.meaning nil]
           ["/speech"    :lagom.speech nil]
           ["/css/[...]" :cowboy_static #erl[:priv_dir :lagom "css"]]
           ["/img/[...]" :cowboy_static #erl[:priv_dir :lagom "img"]]
           ["/js/[...]"  :cowboy_static #erl[:priv_dir :lagom "js"]])})

(defn start-cowboy []
  (let [routes (->erl routes true)
        dispatch (cowboy_router/compile routes)
        priv-dir (code/priv_dir :lagom)
        transport-opts (maps/to_list (->erl {:port 8443
                                             :certfile (str priv-dir "/ssl/server.crt")
                                             :keyfile (str priv-dir "/ssl/server.key")}))
        protocol-opts (->erl {:env {:dispatch dispatch}})]
    (cowboy/start_tls :lagom.https transport-opts protocol-opts)))
