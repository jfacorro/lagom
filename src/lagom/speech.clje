(ns lagom.speech
  (:require [lagom.log :as log]
            [lagom.audio :as audio]))

(defn speech-request [audio-base64]
  #erl{:config #erl{:encoding audio/encoding
                    :sampleRateHertz audio/sample-rate
                    :languageCode "en-US"
                    :profanityFilter false
                    :enableWordTimeOffsets false}
       :audio #erl{:content audio-base64}})

(defn http-request [method url body]
  (httpc/request method
                 #erl[(erlang/binary_to_list url) #erl() #erl"" body]
                 #erl()
                 #erl()))

(defn api-url []
  (->> (application/get_env :lagom :google-api-key "")
       (str "https://speech.googleapis.com/v1/speech:recognize?key=")))

(defn process [audio]
  (let [audio-base64 (audio/encode audio)
        req-body (jsx/encode (speech-request audio-base64))
        url (api-url)]
    (case (http-request :post url req-body)
      #erl[:ok res]
      (let [[status-line _ res-body] res
            [_ status-code _] status-line]
        (log/info "Google API: ~p - ~s" status-code res-body)
        #erl[status-code res-body])

      #erl[:error reason]
      (do
        (log/info "Google API Error: ~p" reason)
        #erl[500 (str reason)]))))

(defn init
  [req state]
  (log/info "Got some audio to process...")
  (let [[_ audio req] (cowboy_req/read_body req)
        flac-audio (audio/convert audio)
        [status-code res-body] (process flac-audio)
        req (cowboy_req/reply status-code #erl{} res-body req)]
    #erl[:ok req state]))
